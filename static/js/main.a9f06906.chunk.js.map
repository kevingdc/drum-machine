{"version":3,"sources":["store/types.js","styles/variables.js","components/DrumPad.jsx","store/actions/displayActions.js","components/DrumPadSection.jsx","utils/audioHelper.js","components/Display.jsx","components/DrumMachine.jsx","containers/App.jsx","styles/GlobaStyle.jsx","store/reducers/displayReducer.js","store/reducers/index.js","store/index.js","index.jsx"],"names":["displayTypes","theme","StyledButton","styled","button","DrumPad","props","handleClick","bind","handleKeyDown","document","addEventListener","this","text","description","getElementById","play","setDisplayText","event","key","toUpperCase","audio","onKeyUp","handleKeyUp","id","className","onClick","src","type","React","Component","connect","dispatch","data","texts","StyledDiv","div","DrumPadSection","map","file","process","audioMapper","state","display","DrumMachine","App","GlobalStyle","createGlobalStyle","initialState","displayReducer","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a9f06906.chunk.js","sourcesContent":["export const displayTypes = {\n  SET_DISPLAY: \"SET_DISPLAY\",\n};\n","export const theme = {\n  primary: \"#00adb5\",\n  darkGray: \"#222831\",\n  lightGray: \"#393e46\",\n  black: \"#121212\",\n  white: \"#eeeeee\",\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { setDisplayText } from \"../store/actions\";\n\nimport { theme } from \"../styles/variables\";\n\nconst StyledButton = styled.button`\n  background-color: ${theme.lightGray};\n  color: ${theme.white};\n  border: none;\n  padding: 3rem;\n  font-size: 4rem;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  border: 2px solid ${theme.lightGray};\n\n  :hover {\n    background-color: ${theme.primary};\n    border-color: ${theme.primary};\n  }\n\n  :active {\n    background-color: ${theme.darkGray};\n  }\n`;\nclass DrumPad extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleClick() {\n    const { text, description } = this.props;\n\n    const audio = document.getElementById(text);\n    audio.play();\n\n    this.props.setDisplayText(description);\n  }\n\n  handleKeyDown(event) {\n    if (event.key.toUpperCase() === this.props.text) {\n      this.handleClick();\n    }\n  }\n\n  render() {\n    const { text, audio, description } = this.props;\n    return (\n      <div onKeyUp={this.handleKeyUp}>\n        <StyledButton\n          id={description}\n          className=\"drum-pad\"\n          onClick={this.handleClick}\n        >\n          {text}\n          <audio\n            id={text}\n            className=\"clip\"\n            src={audio}\n            type=\"audio/mpeg\"\n          ></audio>\n        </StyledButton>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayText: text => {\n      dispatch(setDisplayText(text));\n    },\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(DrumPad);\n","import { displayTypes } from \"../types\";\n\nexport const setDisplayText = text => {\n  return {\n    type: displayTypes.SET_DISPLAY,\n    data: { text },\n  };\n};\n","import styled from \"styled-components\";\n\nimport DrumPad from \"./DrumPad\";\n\nimport { audioMapper } from \"../utils/audioHelper\";\n\nimport { theme } from \"../styles/variables\";\n\nconst texts = [\"Q\", \"W\", \"E\", \"A\", \"S\", \"D\", \"Z\", \"X\", \"C\"];\n\nconst StyledDiv = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(3, 1fr);\n  column-gap: 1rem;\n  row-gap: 1rem;\n  background-color: ${theme.darkGray};\n`;\n\nconst DrumPadSection = () => {\n  return (\n    <StyledDiv>\n      {texts.map(text => {\n        const { file, description } = audioMapper(text);\n        return (\n          <DrumPad\n            key={description}\n            text={text}\n            audio={file}\n            description={description}\n          />\n        );\n      })}\n    </StyledDiv>\n  );\n};\n\nexport default DrumPadSection;\n","export const audioMapper = text => {\n  switch (text) {\n    case \"Q\":\n      return {\n        file: `${process.env.PUBLIC_URL}/audio/beep.mp3`,\n        description: \"Beep\",\n      };\n    case \"W\":\n      return {\n        file: `${process.env.PUBLIC_URL}/audio/car-alarm.mp3`,\n        description: \"Car Alarm\",\n      };\n    case \"E\":\n      return {\n        file: `${process.env.PUBLIC_URL}/audio/click.mp3`,\n        description: \"Click\",\n      };\n    case \"A\":\n      return {\n        file: `${process.env.PUBLIC_URL}/audio/fart.mp3`,\n        description: \"Fart\",\n      };\n    case \"S\":\n      return {\n        file: `${process.env.PUBLIC_URL}/audio/fire-crackers.mp3`,\n        description: \"Fire Crackers\",\n      };\n    case \"D\":\n      return {\n        file: `${process.env.PUBLIC_URL}/audio/pew.mp3`,\n        description: \"Pew\",\n      };\n    case \"Z\":\n      return {\n        file: `${process.env.PUBLIC_URL}/audio/short-circuit.mp3`,\n        description: \"Short Circuit\",\n      };\n    case \"X\":\n      return {\n        file: `${process.env.PUBLIC_URL}/audio/snap.mp3`,\n        description: \"Snap\",\n      };\n    case \"C\":\n      return {\n        file: `${process.env.PUBLIC_URL}/audio/whack.mp3`,\n        description: \"Whack\",\n      };\n  }\n};\n","import { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { theme } from \"../styles/variables\";\n\nconst StyledDiv = styled.div`\n  margin-bottom: 4rem;\n  padding: 2rem;\n  background-color: ${theme.lightGray};\n  color: ${theme.primary};\n  font-size: 3rem;\n  min-width: 10rem;\n  max-width: 30rem;\n  min-height: 5rem;\n  line-height: 5rem;\n  text-align: center;\n`;\n\nconst Display = props => {\n  return <StyledDiv id=\"display\">{props.text}</StyledDiv>;\n};\n\nconst mapStateToProps = state => {\n  return {\n    text: state.display.text,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Display);\n","import styled from \"styled-components\";\n\nimport DrumPadSection from \"./DrumPadSection\";\nimport Display from \"./Display\";\n\nimport { theme } from \"../styles/variables\";\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  background-color: ${theme.darkGray};\n  padding: 8rem;\n`;\n\nconst DrumMachine = () => {\n  return (\n    <StyledDiv id=\"drum-machine\">\n      <Display />\n      <DrumPadSection />\n    </StyledDiv>\n  );\n};\n\nexport default DrumMachine;\n","import styled from \"styled-components\";\n\nimport DrumMachine from \"../components/DrumMachine\";\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  min-height: 100vh;\n`;\n\nconst App = () => {\n  return (\n    <StyledDiv>\n      <DrumMachine />\n    </StyledDiv>\n  );\n};\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\n\nimport { theme } from \"./variables\";\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    font-size: 62.5%;\n  }\n\n  html, body, #root, #root>div {\n    height: 100%\n  }\n\n  body {\n    margin: 0;\n    font-size: 1.6rem;\n    font-family: \"Roboto\", sans-serif;\n    background-color: ${theme.black};\n    color: ${theme.white};\n  }\n`;\n\nexport default GlobalStyle;\n","import { displayTypes } from \"../types\";\n\nconst initialState = {\n  text: \"\",\n};\n\nconst displayReducer = (state = initialState, { type, data }) => {\n  switch (type) {\n    case displayTypes.SET_DISPLAY:\n      return { ...state, text: data.text };\n    default:\n      return state;\n  }\n};\n\nexport default displayReducer;\n","import { combineReducers } from \"redux\";\nimport displayReducer from \"./displayReducer\";\n\nconst rootReducer = combineReducers({ display: displayReducer });\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\n\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./containers/App\";\n\nimport GlobalStyle from \"./styles/GlobaStyle\";\n\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <GlobalStyle />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}